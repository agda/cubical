{-# OPTIONS --safe #-}
module Cubical.Categories.Monad.Base where

open import Cubical.Foundations.Prelude
open import Cubical.Categories.Category
open import Cubical.Categories.Functor renaming (ùüô‚ü®_‚ü© to funcId)
open import Cubical.Categories.NaturalTransformation.Base

private
  variable
    ‚Ñì ‚Ñì' : Level

module _ {C : Category ‚Ñì ‚Ñì'} (M : Functor C C) where
  open Category C

  IsPointed : Type (‚Ñì-max ‚Ñì ‚Ñì')
  IsPointed = NatTrans (funcId C) M

  record IsMonad : Type (‚Ñì-max ‚Ñì ‚Ñì') where
    field
      Œ∑ : IsPointed
      Œº : NatTrans (funcComp M M) M
      idl-Œº : PathP (Œª i ‚Üí NatTrans (F-rUnit {F = M} i) M) (compTrans Œº (Œ∑ ‚àòÀ° M)) (idTrans M)
      idr-Œº : PathP (Œª i ‚Üí NatTrans (F-lUnit {F = M} i) M) (compTrans Œº (M ‚àò ≥ Œ∑)) (idTrans M)
      assoc-Œº : PathP (Œª i ‚Üí NatTrans (F-assoc {F = M} {G = M} {H = M} i) M) (compTrans Œº (M ‚àò ≥ Œº)) (compTrans Œº (Œº ‚àòÀ° M))
