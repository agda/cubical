{-# OPTIONS --safe #-}
module Cubical.HITs.CauchyReals.Lems where

open import Cubical.Foundations.Prelude
open import Cubical.Foundations.Structure


open import Cubical.Data.List
open import Cubical.Data.Nat using (‚Ñï)

import Cubical.Algebra.CommRing as CR

open import Cubical.Tactics.CommRingSolver



module Lems (R : CR.CommRing ‚Ñì-zero) where
 open CR.CommRingStr (snd R)

 [_]r : ‚Ñï ‚Üí fst R
 [ ‚Ñï.zero ]r = 0r
 [ ‚Ñï.suc (‚Ñï.zero) ]r = 1r
 [ ‚Ñï.suc x@(‚Ñï.suc _) ]r = 1r + [ x ]r

 lem-01 : ‚àÄ Œµ Œ¥ Œ∑ Œ∑' a ‚Üí
       (Œµ - (Œ¥ + Œ∑)) +
       ((a + Œ¥) + (Œ∑' - a))
      ‚â° (Œµ + Œ∑') - Œ∑
 lem-01 Œµ Œ¥ Œ∑ Œ∑' a = solve! R

 lem-02 : ‚àÄ Œµ Œ¥ Œ∑ Œ∑' ‚Üí (Œµ - (Œ¥ + Œ∑)) + (Œ¥ + Œ∑')
           ‚â° ((Œµ + Œ∑') - Œ∑)
 lem-02 Œµ Œ¥ Œ∑ Œ∑' = solve! R

 lem-03 : ‚àÄ Œµ Œ∑‚ÇÅ Œ¥ Œ∑ Œ¥* Œ∑* ‚Üí
            (Œµ - (Œ¥ +  Œ∑)) +
       ((Œ∑* + Œ¥) + (Œ∑‚ÇÅ - (Œ¥* +  Œ∑*)))
        ‚â° (Œµ + Œ∑‚ÇÅ) - (Œ¥* + Œ∑)
 lem-03 Œµ Œ∑‚ÇÅ Œ¥ Œ∑ Œ¥* Œ∑* = solve! R

 lem-04 : ‚àÄ Œµ Œ∑‚ÇÅ Œ¥ Œ∑ Œ¥* Œ∑* ‚Üí
            (Œµ - (Œ¥ +  Œ∑)) +
       ((Œ∑* + Œ∑) + (Œ∑‚ÇÅ - (Œ¥* +  Œ∑*)))
        ‚â° (Œµ + Œ∑‚ÇÅ) - (Œ¥* + Œ¥)
 lem-04 Œµ Œ∑‚ÇÅ Œ¥ Œ∑ Œ¥* Œ∑* = solve! R

 lem-05 : ‚àÄ x y ‚Üí x + (y - (x + x)) ‚â° y - x
 lem-05 x y = solve! R

 +AssocCommR : ‚àÄ x y z ‚Üí (x + y) + z ‚â° (x + z) + y
 +AssocCommR x y z = solve! R

 private
  variable
   Œµ Œ¥ q q' a'' ùï¢ r Œ∑ œÉ* Œ¥* Œ∑‚ÇÅ Œ∑* Œ∑'' Œ∑' x y x' y' a a' b b' c c' Œ∏ L : fst R

 lem--00 : (Œµ - Œ¥) + Œ¥ ‚â° Œµ
 lem--00 = solve! R

 lem--01 : (- (Œµ - Œ¥)) + (- Œ¥) ‚â° (- Œµ)
 lem--01 = solve! R

 lem--02 : Œµ + q + (Œµ - q) ‚â° Œµ + Œµ
 lem--02 = solve! R

 lem--03 : (- Œµ) + Œ¥ ‚â° (- (Œµ - Œ¥))
 lem--03 = solve! R

 lem--04 : (- Œµ) + (Œµ + q) ‚â° q
 lem--04 = solve! R

 lem--05 : Œ¥ + (q - Œ¥) ‚â° q
 lem--05 = solve! R

 lem--06 : (Œµ - q) + (q - Œ¥) ‚â° (Œµ - Œ¥)
 lem--06 = solve! R

 lem--07 : Œµ + (- q') + (- a'') + q' ‚â° (Œµ - a'')
 lem--07 = solve! R

 lem--08 : Œ¥ + (Œµ - (Œ¥ + Œ¥)) ‚â° (Œµ - Œ¥)
 lem--08 = solve! R

 lem--09 : (q - r) + (ùï¢ - q) ‚â° (ùï¢ - r)
 lem--09 = solve! R

 lem--010 : (- (q - r)) + (ùï¢ - r) ‚â° (ùï¢ - q)
 lem--010 = solve! R

 lem--012 : (- (- Œµ)) + Œ∑ ‚â° Œµ + Œ∑
 lem--012 = solve! R

 lem--013 : Œ∑ + (Œµ - Œ¥) ‚â° (Œµ + Œ∑) - Œ¥
 lem--013 = solve! R

 lem--014 : ((Œµ - Œ¥) + Œ∑) ‚â° (Œµ + Œ∑) - Œ¥
 lem--014 = solve! R

 lem--015 : (Œµ - Œ¥) + ((œÉ* + Œ¥) + ((Œ∑ - œÉ*) )) ‚â° Œµ + Œ∑
 lem--015 = solve! R

 lem--016 : (Œ∑‚ÇÅ - (Œ¥* + Œ∑*)) + (Œµ - (Œ¥ + Œ∑)) + (Œ¥ + Œ∑*) ‚â° (Œµ + Œ∑‚ÇÅ) - (Œ¥* + Œ∑)
 lem--016 = solve! R

 lem--017 : (Œ∑‚ÇÅ - (Œ¥* + Œ∑*)) + (Œµ - (Œ¥ + Œ∑)) + (Œ∑ + Œ∑*) ‚â° (Œµ + Œ∑‚ÇÅ) - (Œ¥* + Œ¥)
 lem--017 = solve! R

 lem--018 : (Œµ - Œ¥) + (Œ∑ - Œ¥*) ‚â° (Œµ + Œ∑) - (Œ¥* + Œ¥)
 lem--018 = solve! R

 lem--019 : (Œµ - Œ¥) + ((Œ∑* + Œ¥) + (Œ∑ - (Œ¥* + Œ∑*))) ‚â° (Œµ + Œ∑) - Œ¥*
 lem--019 = solve! R

 lem--020 : (Œµ - Œ¥) + ((Œ∑* + Œ¥) + (Œ∑ - (Œ¥* + Œ∑*))) ‚â° (Œµ + Œ∑) - Œ¥*
 lem--020 = solve! R

 lem--021 : (Œµ - Œ¥) + (Œ∑ - Œ¥*) ‚â° (Œµ + Œ∑) - (Œ¥* + Œ¥)
 lem--021 = solve! R

 lem--022 : (Œµ - Œ¥) + Œ∑ ‚â° (Œµ + Œ∑) - Œ¥
 lem--022 = solve! R

 lem--023 : (((Œµ - Œ¥)) + ((Œ¥ + Œ¥*) + ((Œ∑ - Œ¥*)))) ‚â° (Œµ + Œ∑)
 lem--023 = solve! R

 lem--024 : (Œµ - Œ¥) + (Œ∑* - Œ¥*) ‚â° (Œµ + Œ∑*) - (Œ¥ + Œ¥*)
 lem--024 = solve! R

 lem--025 : (Œµ - Œ¥) + ((Œ¥* + Œ¥) + ((Œ∑'' - (Œ¥* + Œ∑*)))) ‚â° (Œµ + Œ∑'') - Œ∑*
 lem--025 = solve! R

 lem--026 : (((Œµ - Œ¥)) + ((Œ¥ + Œ¥*) + ((Œ∑' - Œ¥*)))) ‚â° (Œµ + Œ∑')
 lem--026 = solve! R

 lem--027 : (Œµ - Œ¥) + Œ∑' ‚â° (Œµ + Œ∑') - Œ¥
 lem--027 = solve! R

 lem--028 : (Œµ - Œ¥) + ((Œ¥* + Œ¥) + (Œ∑' - (Œ¥* + Œ∑*))) ‚â° (Œµ + Œ∑') - Œ∑*
 lem--028 = solve! R

 lem--029 : (Œµ - Œ¥) + (Œ∑' - Œ¥*) ‚â° (Œµ + Œ∑') - (Œ¥ + Œ¥*)
 lem--029 = solve! R

 lem--030 : (Œµ - (Œ¥ + Œ∑)) + ((Œ¥* + Œ¥) + (Œ∑' - Œ¥*)) ‚â° (Œµ + Œ∑') - Œ∑
 lem--030 = solve! R

 lem--031 : (Œµ - (Œ¥ + Œ∑)) + ((Œ¥*  + Œ∑) + (Œ∑' - Œ¥*)) ‚â° (Œµ + Œ∑') - Œ¥
 lem--031 = solve! R

 lem--032 : (Œµ - (Œ¥ + Œ∑)) + ((Œ¥* + Œ¥) + ((Œ∑‚ÇÅ - (Œ¥* + Œ∑*)))) ‚â° (Œµ + Œ∑‚ÇÅ) - (Œ∑ + Œ∑*)
 lem--032 = solve! R

 lem--033 : (Œµ - (Œ¥ + Œ∑‚ÇÅ)) + ((Œ¥* + Œ∑‚ÇÅ) + ((Œ∑ - (Œ¥* + Œ∑*)))) ‚â° (Œµ + Œ∑) - (Œ¥ + Œ∑*)
 lem--033 = solve! R

 lem--034 : Œµ ‚â° ((Œµ + Œ¥) - Œ¥)
 lem--034 = solve! R

 lem--035 : Œµ ‚â° ((Œµ - Œ¥) + Œ¥)
 lem--035 = solve! R

 lem--036 : (Œµ - Œ∑) ‚â°
             ((Œµ + Œ¥) - (Œ∑ +  Œ¥))
 lem--036 = solve! R

 lem--037 : (Œµ - Œ∑) ‚â°
             ((Œ¥ + Œµ) - (Œ¥ + Œ∑))
 lem--037 = solve! R

 lem--038 : (Œµ - Œ∑) ¬∑ (Œµ + Œ∑) ‚â°
             (Œµ ¬∑ Œµ) - (Œ∑ ¬∑ Œ∑)
 lem--038 = solve! R

 lem--039 : (x' - x) ¬∑ (y' - y) + (x' ¬∑ y + x ¬∑ (y' - y))
            ‚â° x' ¬∑ y'
 lem--039 = solve! R

 lem--040 : (x' + x) ¬∑ (x' - x)
            ‚â° x' ¬∑ x' - x ¬∑ x
 lem--040 = solve! R

 lem--041 : (x' + x) - (y' + y)
            ‚â° (x' - y') + (x - y)
 lem--041 = solve! R

 lem--042 : (a ¬∑  b' ¬∑  c' + c ¬∑ ( a' ¬∑  b')) ¬∑  c' ‚â°
           (a ¬∑  c' + c ¬∑  a') ¬∑ ( b' ¬∑  c')
 lem--042 = solve! R

 lem--043 : (b ¬∑  a' ¬∑  c' + c ¬∑ ( a' ¬∑  b')) ¬∑  c' ‚â°
            (b ¬∑  c' + c ¬∑  b') ¬∑ ( a' ¬∑  c')
 lem--043 = solve! R

 lem--044 : (Œ∏ +  Œ∏) + ( Œ∏) +
      ( Œµ - ( ( Œ∏ +  Œ∏) +  ( Œ∏ +  Œ∏)))
      ‚â° ( (Œµ + Œ¥) - ( ( Œ∏) +  Œ¥))
 lem--044 = solve! R

 lem--045 : (x' + x) + (y' + y)
            ‚â° (x' + y') + (x + y)
 lem--045 = solve! R

 lem--046 : L ¬∑ (Œµ + (- Œ¥)) ‚â°
    L ¬∑ Œµ + (- (L ¬∑ Œ¥))
 lem--046 = solve! R

 lem--047 : L ¬∑ (Œµ - (Œ¥ + Œ∑)) ‚â°
    ((L ¬∑ Œµ) - ((L ¬∑ Œ¥) + (L ¬∑ Œ∑)))
 lem--047 = solve! R

 lem--048 : ((x + (y - x) ¬∑ a) + (y - x) ¬∑ a) + (y - x) ¬∑ a ‚â° x + (a + a + a) ¬∑ (y - x)
 lem--048 = solve! R

 lem--049 : ((Œµ ¬∑ x) ¬∑ y) + ((Œ∑ ¬∑ x) ¬∑ y) ‚â° (((Œµ + Œ∑) ¬∑ x) ¬∑ y)
 lem--049 = solve! R

 lem--050 : (- Œµ) ‚â° (x - (x + Œµ))
 lem--050 = solve! R

 lem--051 :  y + ((- y) - Œµ) ‚â° (- ((x + Œµ) - x))
 lem--051 = solve! R

 lem--052 : Œµ + x + (- y - Œµ) ‚â° x - y
 lem--052 = solve! R

 lem--053 : y + (- (- Œµ)) - y  ‚â° (x + Œµ) - x
 lem--053 = solve! R

 lem--054 : (((Œµ - Œ∏) - Œ∑) + (Œ∏ + Œ∑)) ‚â° Œµ
 lem--054 = solve! R

 lem--055 : Œ∏ + (Œµ - (Œ∏ + Œ∏ + Œ∏)) ‚â° (Œµ - (Œ∏ + Œ∏))
 lem--055 = solve! R

 lem--056 : (Œµ - Œ∏) ‚â° (Œµ - (Œ∏ + Œ∏)) + Œ∏
 lem--056 = solve! R

 lem--057 : (x ¬∑ y) + ((x ¬∑ y) + (x ¬∑ y)) ‚â°  (x + (x + x)) ¬∑ y
 lem--057 = solve! R

 lem--058 : (r ¬∑ q) + (r ¬∑ q) ‚â°
      ((r + q) ¬∑ (r + q) + - (r ¬∑ r + q ¬∑ q))
 lem--058 = solve! R

 lem--059 : (x' - q) + (y' + q)
            ‚â° x' + y'
 lem--059 = solve! R

 lem--060 : (x' - q) + (q - y')
            ‚â° x' - y'
 lem--060 = solve! R

 lem--061 : (q - y) + (x - q) ‚â° (x - y)
 lem--061 = solve! R

 lem--062 : (q - x) - (q - y) ‚â° y - x
 lem--062 = solve! R

 lem--063 : (Œµ + Œ¥) - Œµ ‚â° Œ¥
 lem--063 = solve! R

 lem--064 : (x ¬∑ (Œµ ¬∑ x')) + (y ¬∑ (Œµ ¬∑ y'))
               ‚â° ((x ¬∑ x') + (y ¬∑ y')) ¬∑ Œµ
 lem--064 = solve! R

 lem--065 : (x' ¬∑ y') - (x ¬∑ y)
              ‚â° y ¬∑ (x' - x) + x' ¬∑ (y' - y)
 lem--065 = solve! R

 lem--066 : (x' - y') + (x - y)
              ‚â° (x' - y) + (x - y')
 lem--066 = solve! R

 lem--067 : (x' - y') - (y - x)
              ‚â° (x' - y) + (x - y')
 lem--067 = solve! R

 lem--068 : (x' - y') - (y - x)
              ‚â° (x' - y) - (y' - x)
 lem--068 = solve! R

 lem--069 : (((a ¬∑ ((q + q') - Œ¥)) - (a ¬∑ (x - Œ¥))) + y)
             - (((a ¬∑ (q - Œ¥)) - (a ¬∑ (x' - Œ¥))) + y') ‚â°
                (a ¬∑ (q' - (x - x')) + (y - y'))
 lem--069 = solve! R

 lem--070 : - (a ¬∑ b) ‚â° a ¬∑ (- b)
 lem--070 = solve! R

 lem--071 : x' - (y - ((x + y) - x)) ‚â° x'
 lem--071 = solve! R

 lem--072 : x - (x + y) ‚â° - y
 lem--072 = solve! R

 lem--073 : (x - y) ¬∑ (x - y) ‚â° (x ¬∑ x + y ¬∑ y) - (( x ¬∑ y ) + ( x ¬∑ y ))
 lem--073 = solve! R

 lem--074 : (x - y) + (y + x') ‚â° x + x'
 lem--074 = solve! R

 lem--075 : (y + x') - (x + x')  ‚â° y - x
 lem--075 = solve! R

 lem--076 : x - y + (x - y) - (x' - y) ‚â° x + x - x' - y
 lem--076 = solve! R

 lem--077 : x - y ‚â° (x' - y) + (x - x')
 lem--077 = solve! R

 lem--078 : y - x' ‚â° (y + (y' - x')) - y'
 lem--078 = solve! R

 lem--079 : y - (y - x) ‚â° x
 lem--079 = solve! R

 lem--080 : (Œµ + x) + ((- y) + Œµ) ‚â° (Œµ + Œµ) + (x - y)
 lem--080 = solve! R

 lem--081 : (q + x) - (q + y) ‚â° x - y
 lem--081 = solve! R

 lem--082 : (((Œµ - Œ∏) - Œ∑) + (Œ∏ + Œ∑')) ‚â° Œµ + (Œ∑' - Œ∑)
 lem--082 = solve! R

 lem--083 : x - y ‚â° (- y) - (- x)
 lem--083 = solve! R

 lem--084 : Œ¥ - Œµ ‚â° (- (Œµ - Œ¥))
 lem--084 = solve! R

 lem--085 : (((x - 1r) ¬∑ (x - 1r)) ¬∑ ([ 2 ]r ¬∑ x - 1r)) ‚â° (x ¬∑ ((([ 2 ]r) ¬∑ (x - 1r)) ¬∑ (x - 1r)
           - (x - 1r) + 1r)) - 1r
 lem--085 = solve! R

 lem--086 : (x ¬∑ y) ¬∑ (x' ¬∑ y') ‚â° (x ¬∑ x') ¬∑ (y ¬∑ y')
 lem--086 = solve! R

 lem--087 : x + y + (x' + y') ‚â° x + x' + (y + y')
 lem--087 = solve! R

 lem--088 : (x + y) - (x + y') ‚â° (y - y')
 lem--088 = solve! R

 lem--089 : y - (y' + x) ‚â° (y - y') - x
 lem--089 = solve! R

 lem--090 : (Œ∑ ¬∑ (y ¬∑ y')) ¬∑ (x ¬∑ Œ∑') ‚â° (((x ¬∑ y) ¬∑ y') ¬∑ Œ∑) ¬∑ Œ∑'
 lem--090 = solve! R


open import Cubical.Data.Rationals as ‚Ñö



module _ where
 open CR.CommRingStr

 ‚ÑöCommRing : CR.CommRing ‚Ñì-zero
 ‚ÑöCommRing .fst = ‚Ñö.‚Ñö
 ‚ÑöCommRing .snd .0r = 0
 ‚ÑöCommRing .snd .1r = 1
 ‚ÑöCommRing .snd .CR.CommRingStr._+_ = ‚Ñö._+_
 ‚ÑöCommRing .snd .CR.CommRingStr._¬∑_ = ‚Ñö._¬∑_
 ‚ÑöCommRing .snd .CR.CommRingStr.-_ = ‚Ñö.-_
 ‚ÑöCommRing .snd .isCommRing = isCommRing‚Ñö
   where
   abstract
     isCommRing‚Ñö : CR.IsCommRing 0 1 ‚Ñö._+_ ‚Ñö._¬∑_ (‚Ñö.-_)
     isCommRing‚Ñö = CR.makeIsCommRing
       ‚Ñö.isSet‚Ñö ‚Ñö.+Assoc ‚Ñö.+IdR
       ‚Ñö.+InvR ‚Ñö.+Comm ‚Ñö.¬∑Assoc
       ‚Ñö.¬∑IdR (Œª x y z ‚Üí ‚Ñö.¬∑DistL+ x y z) ‚Ñö.¬∑Comm


open Lems ‚ÑöCommRing public
